SET(ENABLED_PLUGINS)
CMAKE_POLICY(PUSH)
if(COMMAND cmake_policy)
  cmake_policy(SET CMP0003 NEW)
endif(COMMAND cmake_policy)
# macro for adding a plugin
MACRO(ADD_PLUGIN_TARGET)
  PARSE_ARGUMENTS(PLUGIN "SOURCES;TARGET_CXXFLAGS;TARGET_LDFLAGS;TARGET_LIBRARIES;LIBRARIES" "" ${ARGN})

  CAR(PLUGIN_NAME ${PLUGIN_DEFAULT_ARGS})
  SET(ENABLED_PLUGINS ${PLUGIN_NAME} ${ENABLED_PLUGINS})
  ADD_LIBRARY(${PLUGIN_NAME} SHARED ${PLUGIN_SOURCES})
  IF(PLUGIN_TARGET_LIBRARIES)
    ADD_DEPENDENCIES(${PLUGIN_NAME} ${PLUGIN_TARGET_LIBRARIES})
  ENDIF()
  TARGET_LINK_LIBRARIES(${PLUGIN_NAME} ${PLUGIN_LIBRARIES})
  IF(PLUGIN_TARGET_LDFLAGS)
    STRING(REGEX REPLACE ";" " " PLUGIN_TARGET_LDFLAGS  "${PLUGIN_TARGET_LDFLAGS}")  #FIXME does not deal with space-having ldflags
    SET_TARGET_PROPERTIES(${PLUGIN_NAME} PROPERTIES LINK_FLAGS ${PLUGIN_TARGET_LDFLAGS})
  ENDIF()
  IF(PLUGIN_TARGET_CXXFLAGS)
    STRING(REGEX REPLACE ";" " " PLUGIN_TARGET_CXXFLAGS  "${PLUGIN_TARGET_CXXFLAGS}")  #FIXME does not deal with space-having ldflags
    SET_TARGET_PROPERTIES(${PLUGIN_NAME} PROPERTIES COMPILE_FLAGS ${PLUGIN_TARGET_CXXFLAGS})
  ENDIF()
ENDMACRO(ADD_PLUGIN_TARGET)
CMAKE_POLICY(POP)